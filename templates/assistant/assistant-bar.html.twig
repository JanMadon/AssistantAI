<aside id="sidebar" class="main">
    <div class="mr-0">
        <button class="toggle-btn" type="button">
            <p>MENU</p>
        </button>
    </div>
    <ul class="sidebar-nav">
        <li class="sidebar-submenu">
            <h6 class="sidebar-link collapsed has-dropdown cursor-pointer" data-bs-toggle="collapse"
                data-bs-target="#template_messages" aria-expanded="false">
                Template messages
            </h6>
            <ul id="template_messages" class="sidebar-dropdown list-unstyled collapse" data-bs-parent="#sidebar">
                {% for template in templates %}
                    <li id="{{ template.id }}" class="sidebar-item cursor-pointer">
                        <p>{{ template.id }} {{ template.name }} </p>
                        <p hidden>{{ template.content }}</p>
                    </li>
                {% endfor %}
                <li class="sidebar-item cursor-pointer" data-bs-toggle="modal" data-bs-target="#templateModal">
                    ADDED TEMPLATE
                </li>
            </ul>
        </li>
        <li class="sidebar-submenu">
            <h6 class="sidebar-link collapsed has-dropdown cursor-pointer" data-bs-toggle="collapse"
                data-bs-target="#last-conversation" aria-expanded="false">
                Last conversation
            </h6>
            <ul id="last-conversation" class="sidebar-dropdown list-unstyled collapse" data-bs-parent="#sidebar">
                {% for conversation in conversations %}
                    <li id="{{ conversation.id }}" class="sidebar-item cursor-pointer">
                        <p>{{ conversation.id }}. {{ conversation.name }}!!!</p>
                    </li>
                {% endfor %}
            </ul>
        </li>
    </ul>
</aside>

<!-- Przekazanie z Twinga do js-->
<div class="d-none" id="conversations-data" data-conversations="{{ conversationsJson }}"></div>

<!-- Modal add template-->
<div class="modal fade" id="templateModal" tabindex="-1" role="dialog" aria-labelledby="templateModal"
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl flex justify-content-center" role="document">
        <form id="template_form" class="w-50">
            <div class="modal-content">
                <div class="modal-header">
                    <label for="template-name">name</label>
                    <input type="text" class="form-control" id="template-name" name="name" placeholder="Enter name">
                </div>
                <div class="modal-body">
                    <label for="template-content">Content</label>
                    <textarea class="form-control vh-50" id="template-content" name="content"  rows="3"></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Save changes</button>
                </div>
            </div>
        </form>
    </div>
</div>


<script>
    // set new template
    document.addEventListener("DOMContentLoaded", () => {
        const templateForm = document.getElementById('template_form');
        console.log(templateForm)
        templateForm.addEventListener('submit', e => {
            e.preventDefault()
            const templateData = new FormData(templateForm)
            console.log(templateData);

            axios.post('https://localhost:8000/api/assistant/template', templateData)
                .then(function (response) {
                    console.log('Formularz wysłany pomyślnie:', response.data);
                })
                .catch(function (error) {
                    console.error('Błąd przy wysyłaniu formularza:', error);
                });
        })
    })

    document.addEventListener("DOMContentLoaded", () => {
        const selectedTemplate = document.getElementById('template_messages')
        const conversationList = document.getElementById('last-conversation')

        selectedTemplate.addEventListener('click', e => {
            fillSystemField(e.target.nextElementSibling.innerText);// z assistant/main.html.twig
         })

        conversationList.addEventListener('click', e => {
            const conversation = getConversation(+e.target.parentElement.id);
            if (conversation) {
                fillChatBox(conversation); // z assistant/main.html.twig
            }
        })
    })

    function getConversation(conversationId) {
        const conversationsElement = document.getElementById('conversations-data');
        const conversationsJson = conversationsElement.getAttribute('data-conversations');
        const conversations = JSON.parse(conversationsJson)

        for (let conversation of conversations) {
            if (conversation.id === conversationId) {
                return conversation;
            }
        }
        return null;
    }


    // hamburger menu
    const hamBurger = document.querySelector(".toggle-btn");
    hamBurger.addEventListener("click", function () {
        document.querySelector("#sidebar").classList.toggle("expand");
    });
</script>






